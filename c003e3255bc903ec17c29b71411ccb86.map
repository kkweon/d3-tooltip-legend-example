{"version":3,"sources":["../src/cleaning/features.ts","../src/cleaning/index.ts","../src/drawing/index.ts","../src/index.ts"],"names":[],"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","file":"c003e3255bc903ec17c29b71411ccb86.map","sourcesContent":["export const featureX =\n  \"Unemployment, total (% of total labor force) (national estimate)\";\nexport const featureY = \"GDP (current US$)\";\nexport const featureR = \"Population, total\";\nexport const featureC =\n  \"Poverty headcount ratio at national poverty lines (% of population)\";\n\nexport const yearlyKeys = [\n  \"y2008\",\n  \"y2009\",\n  \"y2010\",\n  \"y2011\",\n  \"y2012\",\n  \"y2013\",\n  \"y2014\",\n  \"y2015\",\n  \"y2016\",\n  \"y2017\",\n];\n","import { ICleanedData, ICountry } from \"../typing\";\nimport { featureC, featureR, featureX, featureY, yearlyKeys } from \"./features\";\n\nfunction getNewKey(feature: string): string {\n  switch (feature) {\n    case featureX:\n      return \"unemployment_rate\";\n    case featureY:\n      return \"gdp\";\n    case featureR:\n      return \"population\";\n    case featureC:\n      return \"poverty_rate\";\n    default:\n      return \"\";\n  }\n}\n\nexport function handleFormat(data: ICountry): ICountry {\n  yearlyKeys.forEach(k => {\n    data[k] = +data[k];\n  });\n\n  return data;\n}\n\n/**\n * Clean data. That means\n *   { country, featureX, featureY, featureR, featureC, year }\n */\nexport function cleanData(data: ICountry[]): ICleanedData[] {\n  const cleanedData = new Map();\n\n  data.forEach(d => {\n    const country = d.country_name;\n\n    if ([featureX, featureY, featureR, featureC].includes(d.series_name)) {\n      yearlyKeys.forEach(yearKey => {\n        const year = +yearKey.slice(1);\n        const result = cleanedData.get([country, year].toString());\n\n        const newKey = getNewKey(d.series_name);\n\n        cleanedData.set([country, year].toString(), {\n          ...result,\n          [newKey]: d[yearKey],\n          year,\n        });\n      });\n    }\n  });\n\n  const dataArray = Array.from(cleanedData.entries());\n  return dataArray.map(x => {\n    const country = x[0].split(\",\")[0];\n    const result = x[1];\n\n    return {\n      ...result,\n      country,\n    };\n  });\n}\n","import * as d3 from \"d3\";\nimport { legendSize, legendColor } from \"d3-svg-legend\";\nimport { IAxes, ICleanedData, IScale, ISize } from \"../typing\";\n\nexport function generateScales(data: ICleanedData[], size: ISize): IScale {\n  const [minRate, maxRate] = d3.extent(data, d => d.unemployment_rate);\n  const x = d3\n    .scaleLinear()\n    .domain([minRate || 0, maxRate || 1])\n    .range([size.padding, size.width - size.padding]);\n\n  const [minGDP, maxGDP] = d3.extent(data, d => d.gdp);\n  const y = d3\n    .scaleLinear()\n    .domain([minGDP || 0, maxGDP || 1e9])\n    .range([size.height - size.padding, size.padding]);\n\n  const [minPop, maxPop] = d3.extent(data, d => d.population);\n  const r = d3\n    .scaleLinear()\n    .domain([minPop || 0, maxPop || 1])\n    .range([10, 40]);\n\n  const [minPoverty, maxPoverty] = d3.extent(data, d => d.poverty_rate);\n  const color = d3\n    .scaleLinear()\n    .domain([minPoverty || 0, maxPoverty || 1])\n    .range([\"limegreen\", \"red\"] as any);\n\n  return { x, y, r, color };\n}\n\nexport function generateAxes(scales: IScale): IAxes {\n  const x = d3.axisBottom(scales.x);\n  const y = d3\n    .axisLeft(scales.y)\n    .tickFormat(d3.formatPrefix(\",.2f\", 1e12) as any);\n\n  return { x, y };\n}\n\nexport function render(\n  year: number,\n  data: ICleanedData[],\n  scales: IScale,\n  axes: IAxes,\n  size: ISize,\n) {\n  const yearlyData = data\n    .filter(d => d.year === year)\n    .filter(\n      d => d.gdp && d.poverty_rate && d.population && d.unemployment_rate,\n    );\n\n  if (yearlyData.length === 0) {\n    d3\n      .select(\"#chart\")\n      .append(\"text\")\n      .classed(\"error--empty\", true)\n      .attr(\"x\", size.width / 2)\n      .attr(\"y\", size.height / 2)\n      .attr(\"text-anchor\", \"middle\")\n      .text(\"No data is found\");\n  } else {\n    d3.select(\".error--empty\").remove();\n  }\n\n  scales.x.domain(d3.extent(yearlyData, d => d.unemployment_rate) as any);\n  scales.y.domain(d3.extent(yearlyData, d => d.gdp) as any);\n  scales.r.domain(d3.extent(yearlyData, d => d.population) as any);\n  scales.color.domain(d3.extent(yearlyData, d => d.poverty_rate) as any);\n\n  const countries = d3\n    .select(\"#chart\")\n    .selectAll(\".country\")\n    .data(yearlyData);\n\n  countries.exit().remove();\n\n  countries\n    .enter()\n    .append(\"circle\")\n    .classed(\"country\", true)\n\n    .merge(countries)\n    .on(\"mousemove\", d => {\n      const tooltip = d3.select(\".tooltip\");\n      const tooltipWidth = (tooltip.node() as HTMLElement).offsetWidth;\n\n      tooltip\n        .style(\"left\", d3.event.x - tooltipWidth / 2 + 10 + \"px\")\n        .style(\"top\", d3.event.y + 30 + \"px\")\n        .style(\"opacity\", 1)\n        .html(\n          `\n<ul>\n<li>Country: ${d.country} </li>\n<li>Population: ${d3.formatPrefix(\",.0\", 1e6)(d.population)} </li>\n<li>GDP: $ ${d3.formatPrefix(\",.0\", 1e6)(d.gdp)} </li>\n<li>Unemployment Rate: ${d3.format(\".2%\")(d.unemployment_rate / 100)} </li>\n<li>Poverty Rate: ${d3.format(\".2%\")(d.poverty_rate / 100)} </li>\n</ul>\n`,\n        );\n    })\n    .on(\"mouseout\", () => {\n      d3.select(\".tooltip\").style(\"opacity\", 0);\n    })\n    .transition()\n    .attr(\"cx\", d => scales.x(d.unemployment_rate))\n    .attr(\"cy\", d => scales.y(d.gdp))\n    .attr(\"r\", d => scales.r(d.population))\n    .attr(\"fill\", d => scales.color(d.poverty_rate));\n\n  d3\n    .select(\".x-axis\")\n    .attr(\"transform\", `translate(0, ${size.height})`)\n    .call(axes.x as any);\n  d3.select(\".y-axis\").call(axes.y as any);\n\n  // create radius legend\n  const radiusLegend = (legendSize().scale(scales.r) as any)\n    .shape(\"circle\")\n    .shapePadding(15)\n    .labelOffset(20)\n    .labels(\n      ({ i, generatedLabels }: { i: number; generatedLabels: number[] }) =>\n        d3.formatPrefix(\",.0\", 1e6)(generatedLabels[i]),\n    )\n    .title(\"Population\")\n    .orient(\"vertical\");\n\n  d3.select(\".legend--radius\").call(radiusLegend);\n\n  // create poverty legend - color\n  const povertyLegend = (legendColor().scale(scales.color) as any)\n    .cells(3)\n    .orient(\"vertical\")\n    .title(\"Poverty Rate\")\n    .labels(\n      ({ i, generatedLabels }: { i: number; generatedLabels: number[] }) =>\n        generatedLabels[i] + \"%\",\n    )\n    .shapeWidth(30);\n\n  d3.select(\".legend--poverty\").call(povertyLegend);\n}\n","import * as d3 from \"d3\";\nimport { cleanData, handleFormat } from \"./cleaning\";\nimport { generateAxes, generateScales, render } from \"./drawing\";\nimport \"./scss/main.scss\";\nimport { ICountry, ISize } from \"./typing\";\n\nconst url =\n  \"https://gist.githubusercontent.com/kkweon/de072744e05167292ace05541d60a172/raw/f9e1d2b075b49d6f8abcdf2c1bcf5c06a3cc0411/world_economic_data.csv\";\n\nd3.csv(url, handleFormat as any, main as any);\n\nfunction main(error: any, data: ICountry[]) {\n  if (error) {\n    throw new Error(error);\n  }\n\n  // cleanData\n  const newData = cleanData(data);\n  const [minYear, maxYear] = d3.extent(newData, d => d.year);\n\n  if (typeof minYear === \"undefined\") {\n    throw new Error(\"min year is not found\");\n  }\n\n  const size: ISize = {\n    width: 600,\n    height: 600,\n    padding: 50,\n  };\n\n  const svg = d3\n    .select(\"#chart\")\n    .attr(\"width\", size.width)\n    .attr(\"height\", size.height);\n\n  const inputSlider = d3\n    .select(\"#year-slider\")\n    .property(\"min\", minYear)\n    .property(\"max\", maxYear)\n    .property(\"value\", minYear);\n\n  // create tooltip dom\n  d3\n    .select(\"body\")\n    .append(\"div\")\n    .classed(\"tooltip\", true);\n\n  // size legend\n  svg\n    .append(\"g\")\n    .classed(\"legend--radius\", true)\n    .attr(\"fill\", \"rgba(0,0,0, 0.5)\")\n    .attr(\n      \"transform\",\n      `translate(${size.width + size.padding}, ${size.height / 3})`,\n    );\n\n  // poverty legend - color\n  svg\n    .append(\"g\")\n    .classed(\"legend--poverty\", true)\n    .attr(\n      \"transform\",\n      `translate(${size.width + size.padding}, ${size.height / 10})`,\n    );\n\n  const label = svg\n    .append(\"text\")\n    .classed(\"title\", true)\n    .attr(\"x\", size.width / 2)\n    .attr(\"y\", 0)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"2em\");\n\n  label.text(`GDP vs Unemployment Rate (${minYear})`);\n\n  const scales = generateScales(newData, size);\n  const axes = generateAxes(scales);\n\n  svg.append(\"g\").classed(\"x-axis\", true);\n  svg.append(\"g\").classed(\"y-axis\", true);\n\n  render(minYear, newData, scales, axes, size);\n\n  inputSlider.on(\"input\", () => {\n    const year = +d3.event.currentTarget.value;\n    render(year, newData, scales, axes, size);\n    label.text(`GDP vs Unemployment Rate (${year})`);\n  });\n}\n"]}